
## Example for bass management 5.1.2 compatible dolby atmos with substractive filters using bessel 4th order
## this gives perfect linear phase (fixed group delay) which is a mandatory condition to have different  crossover frequencies.
## in 96k each output to dac can be replaced by outputvolsat to avoid any risk of saturation.
## the LFE channel is increased by 10db
## possibility to choose if the center channel low freq is sent to FRONT, or to SUB directly

DSPMANT 28,56           

# CHOOSE one or the other mode for CENTRE channel HERE only
mode_centre_to_front ? 0		# 1 otherwise 0 to direct centre channel low freq to sub
MCF ?= mode_centre_to_front

## DAC output assignement , can be changed by user

DAC_L			0
DAC_R			1
DAC_C			2
DAC_SUB			3
DAC_LS			4
DAC_RS			5
DAC_Ltm			6	#overhead speakers for dolby atmos
DAC_Rtm			7

## key frequencies for individual crossover, can be changed freely

Fc_FRONT		40		# crossover frequency for both front speakers
Fc_CENTRE		80		# crossover frequency for centre channel
Fc_SUR			100		# crossover frequency for both surround speakers 
Fc_SURtm		100		# crossover frequency for head speakers
Fc_SUB			1000	# optional low pass cut off frequency for subwoofer (typically 200..260). The defautl 1000hz doesnt impact phase in low frequency region

cbe4    1.114   # magic coefficient to shift crossover point for LV4 filters
dbe4    510000  # magic numerator to get bessel4 group delay with formula gdbe4 = dbe4 / ( fc * cbe4 )

## filters definition for each output including some optional PEQ correction (set at 0db by default)

# for KH O300 which behave almost as high pass LR4
# a simple LT is done to push the cutoff few hertz left, to avoid saturation in bass (closed box)
F_FRONT_HP		LT(36,0.75,45,0.75) 	# this also requires a delay value of 3000 in PH_FRONT
# for other speakers, uncomment line below instead to follow a classical LR approach
#F_FRONT		HPLR4( Fc_FRONT )
F_FRONT_EQ		PEAK(400,1,0db)	PEAK(800,1,0db)	PEAK(1600,1,0db) PEAK(1600,1,0db) PEAK(1600,1,0db) HS2(8000,1,0db)	# optional EQ for 44..96k
F_FRONT_SUB		LPBE4( Fc_FRONT * cbe4 )

# center speaker filter bank
F_CENTRE_EQ		PEAK( 1000,1,0db ) PEAK( 2000,1,0db )  HS2(8000,1,0db)		# optional EQ for 44..96k
F_CENTRE_SUB	LPBE4( Fc_CENTRE * cbe4 )
F_CENTRE_SUB_DIV2	LPBE4( Fc_CENTRE * cbe4, 0.5 )  # same with - 6db

# surround speakers filter
F_SUR_EQ		PEAK( 1000,1,0db ) PEAK( 2000,1,0db ) PEAK( 3000,1,0db )  HS2(8000,1,0db)		# optional EQ for 44..96k
F_SUR_SUB		LPBE4( Fc_SUR * cbe4 )

# overhead surround at 192khz, need to be managed like surround
F_SURtm_EQ		PEAK( 1000,1,0db ) PEAK( 2000,1,0db ) HS2(8000,1,0db)	
F_SURtm_SUB		LPBE4( Fc_SURtm * cbe4 )

# optional subwoofer low pass as a butterworth 2nd order
F_SUB			PEAK( 80,1,0db ) LPBE2( Fc_SUB )

## bank of delays given in microseconds to correct speaker distance at listening point
## each value should be computed based on 343m/seconds and the value should be relative to the farest speaker.
## example : if farest is at 4m from listening position (example mains L & R)) and if center is at 3.8m
## then the center should be delayed by (4-3.8)/343*1000000 = 583us
delayratio	= 1000000/343	# typical ratio to compute number of microseconds based on distance in meters for typical sound speed

DEL_L		=	100			# or can use a formula based on distance like = dist * delayratio
DEL_R		=	100
DEL_C		=	100
DEL_SUB		=	100
DEL_LS		=	100
DEL_RS		=	100
DEL_Ltm		=	100
DEL_Rtm		=	100

# formula below should not be changed. This is the equivalent delay for the bessel 4 filters at respective fc
DEL_FRONT_LV4     = dbe4 / Fc_FRONT / cbe4
DEL_CENTRE_LV4    = dbe4 / Fc_CENTRE / cbe4
DEL_SUR_LV4       = dbe4 / Fc_SUR / cbe4
DEL_SURtm_LV4     = dbe4 / Fc_SURtm / cbe4

## USB inputs definition. Same for AES due to internal loopback in xmos when in PureAES mode

Lin				16
Rin				17
Cin				18
LFEin			19
LSin			20
RSin			21
Ltmin			22	#not used in case of AES inputs 
Rtmin			23	#not used in case of AES inputs 

C_SUB			31	#special usage of an output location for handling the value of the centre low freq

## special outputs definition to USB host only for testing with REW

REW1		24	; REW_LOOPBACK = REW1	# correspond to input channel 1 in REW menus, as a straight loopback reference
REW2		25	; REW_FRONT  = REW2	    # response of FRONT
REW3		26	; REW_CENTRE = REW3	    # response of centre		    
REW4		27	; REW_SUR    = REW4     # SUR response                
REW5		28	; REW_SURtm  = REW5     # SURtm response
REW6		29	; REW_SUB    = REW6		# total SUB response including LFE
REW7		30	; REW_SUM    = REW7     # used to show the electrical sum of all selected channels
REW8		31	; # used for sharing centre low freq (C_SUB)

# intermediate memory location to hold part of signals
M_L_SUB	        MEMORY 1    # low freq part of the left channel
M_R_SUB	        MEMORY 1
M_C_SUB	        MEMORY 1
M_LS_SUB	    MEMORY 1
M_RS_SUB	    MEMORY 1
M_Ltm_SUB       MEMORY 1
M_Rtm_SUB       MEMORY 1
M_L	            MEMORY 1    # high freq part of the left channel
M_R	            MEMORY 1
M_C	            MEMORY 1
M_LS	        MEMORY 1
M_RS	        MEMORY 1
M_Ltm           MEMORY 1
M_Rtm           MEMORY 1
M_SUB	        MEMORY 1    # resulting sub channel including LFE

# dont modify formula below which are used to enable or disable a core according to mode choosen
core_enabled_when_centre_to_front 	= mode_centre_to_front * 15
core_enabled_when_centre_to_sub 	= 15 - core_enabled_when_centre_to_front

PureUSB		3	    # pattern to enable a core only when in PureUSB mode
PureAES		8	    # pattern to enable a core only when in PureAES mode

#################################################################
####           BASS MANAGEMENT PROGRAM                       ####
####                                                         ####
#### 3 cores in AES (5.1) + 2 cores for spdif decoding       ####
#### 6 cores in PureUSB (5.1.2)                              ####
####                                                         ####        
#################################################################

coreextern PureAES,0,1      # this statement is used to launch the first spdif decoding core (AES2) in paralell
coreextern PureAES,0,1      # this statement is used to launch the second spdif decoding core (AES3) in paralell


## CORE 1 : in charge of Left
core

	mixer 		Lin , C_SUB		# combine Left channel with C_SUB result (one sample delayed, neglected)
    copyxy
    biquad      F_FRONT_SUB
    savexmem    M_L_SUB         # save low freq of the front left signal
    swapxy
    delayus     DEL_FRONT_LV4
    subxy                       # compute high pass
    savexmem    M_L
#	biquad 		F_FRONT_EQ		# eventually filtering Front Left (EQ)
	delayus		DEL_L			# adjusting delay for distance
	output 		DAC_L , REW_FRONT
#	outputvolsat DAC_L 			# alternative output when ready for "production"

    section PureAES     # LS is managed here in PureAES only
    input 		LSin
    delayus     DEL_FRONT_LV4 - DEL_SUR_LV4
    copyxy
	biquad		F_SUR_SUB
    savexmem    M_LS_SUB        # save low freq
    swapxy
    delayus     DEL_SUR_LV4
    subxy                       # compute 2nd order high pass
#    biquad      F_SUR_EQ        # equalize eventually with some PEQs 
    savexmem    M_LS
	delayus		DEL_LS          # distance allignement
	output 		DAC_LS 
#	outputvolsat DAC_LS


## CORE 2 : in charge of Right
core
	mixer 		Rin , C_SUB		# combine Left channel with above result
    copyxy
    biquad      F_FRONT_SUB
    savexmem    M_R_SUB
    swapxy
    delayus     DEL_FRONT_LV4
    subxy
    savexmem    M_R
#	biquad 		F_FRONT_EQ		# filtering Front Left (EQ)
	delayus		DEL_R			# adjusting delay for distance
	output 		DAC_R
#	outputvolsat DAC_R 			# alternative output when ready for "production"

section PureAES	# RS is managed here in Pure AES
    input 		RSin
    delayus     DEL_FRONT_LV4 - DEL_SUR_LV4
    copyxy
	biquad		F_SUR_SUB
    savexmem    M_RS_SUB        # save low freq    swapxy
    delayus     DEL_SUR_LV4
    subxy                       # compute high pass
    biquad      F_SUR_EQ        # equalize eventually with some PEQs 
    savexmem    M_RS
	delayus		DEL_RS          # distance allignement
	output 		DAC_RS , REW_SUR
#	outputvolsat DAC_RS


## CORE 3 : in charge of Subwoofer and Centre
core

    # subwoofer
	inputgain 	( LFEin, 10db )
	addmem 	    M_L_SUB, M_R_SUB, M_C_SUB, M_LS_SUB, M_RS_SUB   # these values are computed later by other cores
    savexmem    M_SUB                       # total of subwoofer for LCR+SUR LR
    section PureAES                         # pureAES in first to optimize testing time in PureAES mode
    	transfer (8,24) (9,25) (10,26) (11,27) (12,28) (13,29)	#feedback to xmos for loopback to 16..21
    section PureUSB
        addmem      M_Ltm_SUB, M_Rtm_SUB
    	transfer ( Lin, REW_LOOPBACK )  (Lin, Cin)    #( Lin, Rin) #(Lin, Cin) # used during test, to send the Lef signal every where else
    section
#	biquad 		F_SUB			            # eventually apply specific biquad filtering for sub
	delayus		DEL_SUB
	output 		DAC_SUB , REW_SUB
#	outputvolsat DAC_SUB

    #this is to demonstrate that the sum of all signals is OKAY on 5.1 !
#    mixermem M_SUB, M_L, M_R, M_C, M_LS, M_RS
#    output REW_SUM
	input 		Cin 			# get center channel 
    section     core_enabled_when_centre_to_front
	biquad 		F_CENTRE_SUB    # extract low freq only.
    outputgain  ( C_SUB, 0.5 )
    section     core_enabled_when_centre_to_sub
    delayus     DEL_FRONT_LV4 - DEL_CENTRE_LV4
    copyxy
	biquad 		F_CENTRE_SUB    # extract low freq only.
    savexmem    M_C_SUB         # save low freq
    section     # no parameter = end of selector
    swapxy                      # retreive centre channel 
    delayus     DEL_CENTRE_LV4  # after this delay, total delay = DEL_FRONT_LV4
    subxy                       # compute high pass
    savexmem    M_C             # save high freq of centre channel for futur sumation
#    biquad      F_CENTRE_EQ     # equalize eventually with some PEQs 
    delayus     DEL_C           # distance correction
    output      DAC_C , REW_CENTRE
#	outputvolsat DAC_C 			# alternative output when ready for "production"

    mixer DAC_C,DAC_L,DAC_R,DAC_SUB
    output REW_SUM

## CORE 4 : in charge of Ltm , this one ONLY activated in pureUSB
core PureUSB		

	input 		LSin
    delayus     DEL_FRONT_LV4 - DEL_SUR_LV4
    copyxy
	biquad		F_SUR_SUB
    savexmem    M_LS_SUB        # save low freq
    swapxy
    delayus     DEL_SUR_LV4
    subxy                       # compute 2nd order high pass
#    biquad      F_SUR_EQ        # equalize eventually with some PEQs 
    savexmem    M_LS
	delayus		DEL_LS          # distance allignement
	output 		DAC_LS 
#	outputvolsat DAC_LS

	input 		Ltmin
    delayus     DEL_FRONT_LV4 - DEL_SURtm_LV4 
    copyxy
	biquad		F_SURtm_SUB
    savexmem    M_Ltm_SUB     # save low freq
    swapxy
    delayus     DEL_SURtm_LV4
    subxy                       # compute 2nd order high pass
#    biquad      F_SURtm_EQ        # equalize eventually with some PEQs 
	delayus		DEL_Ltm         # distance allignement
	output 		DAC_Ltm , REW_SURtm
#	outputvolsat DAC_Ltm

## CORE 5 : in charge of Ltm , this one ONLY activated in pureUSB
core PureUSB

	input 		RSin
    delayus     DEL_FRONT_LV4 - DEL_SUR_LV4
    copyxy
	biquad		F_SUR_SUB
    savexmem    M_RS_SUB        # save low freq    swapxy
    delayus     DEL_SUR_LV4
    subxy                       # compute high pass
    biquad      F_SUR_EQ        # equalize eventually with some PEQs 
    savexmem    M_RS
	delayus		DEL_RS          # distance allignement
	output 		DAC_RS , REW_SUR
#	outputvolsat DAC_RS

	input 		Rtmin
    delayus     DEL_FRONT_LV4 - DEL_SURtm_LV4 
    copyxy
	biquad		F_SURtm_SUB
    savexmem    M_Rtm_SUB
    swapxy
    delayus     DEL_SURtm_LV4
    subxy                       # compute high pass
#    biquad      F_SURtm_EQ        # equalize eventually with some PEQs 
	delayus		DEL_Rtm         # distance allignement
	output 		DAC_Rtm 
#	outputvolsat DAC_Rtm

#-#### DELAYS PRE-FILTERING to allign phases
#-#### Delay Front Speakers LV4 = [DEL_FRONT_LV4]us
#-#### Delay Centre speaker LV4 = [DEL_CENTRE_LV4]us
#-#### Delay Surround speakers LV4 = [DEL_SUR_LV4]us
#-#### Delay Surround Head Speakers LV4 = [DEL_SURtm_LV4]us

end
